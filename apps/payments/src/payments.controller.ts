import { Controller, Get, UsePipes, ValidationPipe } from '@nestjs/common';
import { PaymentsService } from './payments.service';
import {
   Ctx,
   MessagePattern,
   Payload,
   RmqContext,
} from '@nestjs/microservices';
import { PaymentsCreateChargeDto } from './dto/payment-create-charge.dto';

@Controller()
export class PaymentsController {
   constructor(private readonly paymentsService: PaymentsService) {}

   @MessagePattern('create_charge')
   @UsePipes(new ValidationPipe())
   async createCharge(
      @Payload() data: PaymentsCreateChargeDto,
      @Ctx() context: RmqContext,
   ) {
      const channel = context.getChannelRef();
      const orginalMessage = context.getMessage();
      channel.ack(orginalMessage);
      return this.paymentsService.createCharge(data);
   }
}
